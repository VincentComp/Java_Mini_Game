package Game;

/**
 * Class
 * Not yet type this
 */
public class Map {
    static int[][] map =
            {       {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                    {1,0,0,0,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1},
                    {0,0,1,0,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1},
                    {1,0,1,0,1,1,1,0,1,1,1,0,1,0,1,1,1,0,0,0,0,0,1,0,1,1,1,0,1,1},
                    {1,0,1,0,1,1,0,0,0,1,1,0,1,0,1,1,0,0,0,1,1,0,1,0,1,1,0,0,0,1},
                    {1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,1,0,1},
                    {1,1,0,1,1,0,0,0,0,1,1,1,0,1,1,0,0,0,0,1,1,1,0,1,1,0,0,0,0,1},
                    {1,1,0,0,1,0,1,1,0,1,1,1,0,0,1,0,1,1,0,1,1,1,0,0,1,0,1,1,0,1},
                    {1,1,1,0,0,0,1,1,0,1,1,1,1,0,0,0,1,1,0,1,1,1,1,0,0,0,1,1,0,1},
                    {1,1,1,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},

                    {1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
                    {1,0,0,0,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1},
                    {1,0,1,0,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1},
                    {1,0,1,0,1,1,1,0,1,1,1,0,1,0,1,1,1,0,1,1,1,0,1,0,1,1,1,0,1,1},
                    {1,0,1,0,1,1,0,0,0,1,1,0,1,0,1,1,0,0,0,1,1,0,1,0,1,1,0,0,0,1},
                    {1,0,0,0,0,0,0,1,0,1,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1},
                    {1,1,0,1,1,0,0,0,0,1,1,1,0,1,1,0,0,0,0,1,1,1,0,1,1,0,0,0,0,1},
                    {1,1,0,0,1,0,1,1,0,1,1,1,0,0,1,0,1,1,0,1,1,1,0,0,1,0,1,1,0,1},
                    {1,1,1,0,0,0,1,1,0,1,1,1,1,0,0,0,1,1,0,1,1,1,1,0,0,0,1,1,0,1},
                    {1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1},

                    {1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1},
                    {1,0,0,0,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,0,1,0,0,0,1,1,1,1,1,1},
                    {1,0,1,0,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,0,0,0,1,0,1,1,1,1,1,1},
                    {1,0,1,0,1,1,1,0,1,1,1,0,1,0,1,1,1,0,1,0,1,0,1,0,1,1,1,0,1,1},
                    {1,0,1,0,1,1,0,0,0,1,1,0,1,0,1,1,0,0,0,0,1,0,1,0,1,1,0,0,0,1},
                    {1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,1,0,1},
                    {1,1,0,1,1,0,0,0,0,1,1,1,0,1,1,0,0,0,0,1,1,1,0,1,1,0,0,0,0,1},
                    {1,1,0,0,1,0,1,1,0,1,1,1,0,0,1,0,1,1,0,1,1,1,0,0,1,0,1,1,0,1},
                    {1,1,1,0,0,0,1,1,0,1,1,1,1,0,0,0,1,1,0,1,1,1,1,0,0,0,1,1,0,1},
                    {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1}};




    static void print_map(){
        for(int i = 0; i < 30; i++){//change
            for(int j = 0; j < 30; j++){//change
                if(map[i][j] == 1){
                    System.out.print("[=]");
                }else if(map[i][j] == 2) {
                    System.out.print(" * ");
                }else if(map[i][j] == 3){
                    System.out.print(" S ");
                }else{
                    System.out.print("   ");
                }
            } System.out.println();
        }
    }


    public static void main(String[] args) {



        int start_x = 0;//0
        int start_y = 2;//2
        int dest_x = 18; //18
        int dest_y = 29; //29

        Map.map[start_y][start_x] = 3;

        int count = 0;
        while(!((start_x == dest_x) && (start_y == dest_y))){
            if(count > 10000)
                break;

            Direction dir = ShortestPath.get_Direction(map,start_x,start_y,dest_x,dest_y);
            start_x += dir.getDx();
            start_y += dir.getDy();
            Map.map[start_y][start_x] = 2;
            count++;
        }



        Map.print_map();



    }
}
